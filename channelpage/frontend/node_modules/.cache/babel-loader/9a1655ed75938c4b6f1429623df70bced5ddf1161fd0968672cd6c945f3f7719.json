{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import LoginPage from'./login_page';// Verifică că această cale este corectă\nimport ChannelPage from'./channel_page';// Verifică că această cale este corectă\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LoginPage,{})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/channel\",element:/*#__PURE__*/_jsx(ChannelPage,{})}),\" \"]})});}export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","LoginPage","ChannelPage","jsx","_jsx","jsxs","_jsxs","App","children","path","element"],"sources":["C:/Users/Anemona/Desktop/react/channel page/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport LoginPage from './login_page'; // Verifică că această cale este corectă\r\nimport ChannelPage from './channel_page'; // Verifică că această cale este corectă\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<LoginPage />} /> {/* Pagina de login */}\r\n        <Route path=\"/channel\" element={<ChannelPage />} /> {/* Pagina de canal */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,SAAS,KAAM,cAAc,CAAE;AACtC,MAAO,CAAAC,WAAW,KAAM,gBAAgB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,mBACEH,IAAA,CAACN,MAAM,EAAAU,QAAA,cACLF,KAAA,CAACN,MAAM,EAAAQ,QAAA,eACLJ,IAAA,CAACL,KAAK,EAACU,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACH,SAAS,GAAE,CAAE,CAAE,CAAC,IAAC,cAC3CG,IAAA,CAACL,KAAK,EAACU,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEN,IAAA,CAACF,WAAW,GAAE,CAAE,CAAE,CAAC,IAAC,EAC9C,CAAC,CACH,CAAC,CAEb,CAEA,cAAe,CAAAK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}