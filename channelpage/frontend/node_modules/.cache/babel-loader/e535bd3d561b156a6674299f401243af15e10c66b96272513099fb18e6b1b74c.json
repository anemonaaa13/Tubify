{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anemona\\\\Desktop\\\\react\\\\channel page\\\\frontend\\\\src\\\\login_page.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  // Starea formularului pentru email și parola\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  // Funcție pentru a gestiona schimbările în câmpuri\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // Extragem 'name' și 'value' din event\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value // Actualizăm starea pe baza câmpului care s-a schimbat\n    }));\n  };\n\n  // Funcție pentru trimiterea formularului\n  const handleSignIn = async e => {\n    e.preventDefault(); // Prevenim reîncărcarea paginii la trimiterea formularului\n\n    // Validarea simplă a datelor\n    if (!formData.email || !formData.password) {\n      alert(\"Te rog completează toate câmpurile!\");\n      return;\n    }\n\n    // Logarea datelor (pentru debug)\n    console.log('Email:', formData.email);\n    console.log('Password:', formData.password);\n\n    // Trimiterea datelor la backend (exemplu cu fetch)\n    try {\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed!');\n      }\n      const data = await response.json();\n      console.log('Login successful:', data);\n      // Poți redirecționa utilizatorul către pagina principală a aplicației\n    } catch (error) {\n      console.error('Error during login:', error);\n      alert('Autentificarea a eșuat. Te rog încearcă din nou!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Autentificare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\" // Folosim 'name' pentru a lega input-ul de starea corespunzătoare\n          ,\n          value: formData.email,\n          onChange: handleChange // Apelează funcția care actualizează starea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parola:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\" // Folosim 'name' pentru a lega input-ul de starea corespunzătoare\n          ,\n          value: formData.password,\n          onChange: handleChange // Apelează funcția care actualizează starea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Autentific\\u0103-te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"IN1x5Nd7H9OKcK36spiQZIJPJnU=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","handleChange","e","name","value","target","prevState","handleSignIn","preventDefault","alert","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Anemona/Desktop/react/channel page/frontend/src/login_page.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction LoginPage() {\r\n  // Starea formularului pentru email și parola\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  // Funcție pentru a gestiona schimbările în câmpuri\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;  // Extragem 'name' și 'value' din event\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value   // Actualizăm starea pe baza câmpului care s-a schimbat\r\n    }));\r\n  };\r\n\r\n  // Funcție pentru trimiterea formularului\r\n  const handleSignIn = async (e) => {\r\n    e.preventDefault();  // Prevenim reîncărcarea paginii la trimiterea formularului\r\n\r\n    // Validarea simplă a datelor\r\n    if (!formData.email || !formData.password) {\r\n      alert(\"Te rog completează toate câmpurile!\");\r\n      return;\r\n    }\r\n\r\n    // Logarea datelor (pentru debug)\r\n    console.log('Email:', formData.email);\r\n    console.log('Password:', formData.password);\r\n\r\n    // Trimiterea datelor la backend (exemplu cu fetch)\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          email: formData.email,\r\n          password: formData.password\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Login successful:', data);\r\n      // Poți redirecționa utilizatorul către pagina principală a aplicației\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      alert('Autentificarea a eșuat. Te rog încearcă din nou!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Autentificare</h2>\r\n      <form onSubmit={handleSignIn}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"    // Folosim 'name' pentru a lega input-ul de starea corespunzătoare\r\n            value={formData.email}\r\n            onChange={handleChange}   // Apelează funcția care actualizează starea\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"password\">Parola:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"    // Folosim 'name' pentru a lega input-ul de starea corespunzătoare\r\n            value={formData.password}\r\n            onChange={handleChange}   // Apelează funcția care actualizează starea\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Autentifică-te</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}